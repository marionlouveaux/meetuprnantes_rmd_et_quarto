---
title: "Rmarkdown et Quarto"
author: "Marion Louveaux"
format:
  revealjs:
    slide-number: c/t
    footer: "Meetup R Nantes 2022-10-19"
    theme: [rmd_and_quarto.css]
editor: visual
editor_options: 
  chunk_output_type: console
---

# Le concept

------------------------------------------------------------------------

```{r}
#| echo: false
#| out-width: '75%'
#| fig-align: 'center'
knitr::include_graphics("images/phd031214s.gif")
```

> https://phdcomics.com/comics/archive.php?comicid=1689     


::: notes
Reproductibilité de la mise en page et du contenu. Quarto et Rmarkdown sont des outils pour créer des documents de manière reproductible : mise en page du document, mais aussi du contenu.
:::

## Rmarkdown

![](images/rmarkdown_preview.png)

## Quarto

![](images/quarto_preview.png)
      
## Quelques exemples

- Reprendre ou transmettre son travail à tout moment
- Partager ses résultats dès le début d'un projet
- Travailler de manière collaborative   
- Utiliser la bonne version  
- Décliner un même rapport selon des paramètres    

::: notes
**Transmission** : Les paragraphes de texte contiennent plus de détails que les commentaires   
-   Reprendre un projet mis de côté après quelques mois     
-   Transmettre son projet à un collègue ou un stagiaire         
-   Faciliter la continuité de son travail en son absence (congés, arrêts maladie...)     
   
**Itération** : La mise en forme du document rends sa lecture agréable à tout moment.              
-   Relire son travail avant de poursuivre ses analyses
-   Informer ses collègues ou clients de l'avancée d'un travail et leur partager une version intermédiaire

Exemple : Plateforme de service en analyse d'images biologiques / analyse de données      
- Plusieurs projets en parallèle      
- Un projet peut durer plusieurs mois            
- Un projet peut rester en pause un mois ou deux    
- Il faut pouvoir informer les chercheurs de l'avancée du travail et leur laisser la possibilité de consulter les résultats à tout moment     

**Collaboration** : La structure modulaire du document permet de travailler à plusieurs dessus. Juliette en parlera + en détails 

-   Séparer l'écriture d'un livre par chapitre     
-   Séparer la création des graphiques de leur analyse      
-   Partager une présentation avec des diapositives adaptable en fonction de l'audience     


**Version** : Est-ce que ce graphique a été fait avec les bonnes données ? Est-ce que la version du document retrouvée dans mes mails est bien la dernière ?

=\> Le format du document permet de garder trace des données source et d'utiliser un système de suivi de version.   

-   Avoir un seul document / un seul projet     
-   Garder le lien avec les données utilisées     
-   Ajouter un système de suivi de version type git      

**Paramètres** :        

-   Conserver la même structure de rapport, mais données différentes
-   Gérer un export dans plusieurs langues     

Exemple : analyse d'images de tissus cancéreux (foie, reins, poumon, sein...) mêmes analyses, mais données différentes et besoin d'un rapport par image =\> voir aussi présentation de Juliette    
:::



# Les points communs

## Le language markdown

![](images/markdown_demo.png) 


## Le YAML et les options de chunks

![](images/point_commun_yaml.png) 

::: notes
Choisir ce qui est visible (code, texte) et contrôler l'apparence du document (css, format d'export HTML/PDF/Word, type de support).     
:::

## Les paragraphes de texte et les chunks de code

![](images/point_commun_chunks.png)   

      
::: notes
On alterne texte et code. 
Texte : formattage markdown     
Chunk : indication du langage en entrée du chunk, on reviendra sur les options de chunk plus tard, celles-ci permettent d'afficher ou non le code, afficher ou non le résultat, ajouter une légende etc
:::



## Plusieurs formats pour l'export

- HTML
- PDF (via LaTeX) 
- Word
- EPUB 

=> définis dans le YAML

::: notes
D'abord interprétation des chunks de code avec conversion de markdown vers les différents formats.    
Géré via Pandoc, logiciel libre de conversion de documents.   
:::

## Différents supports

- Document : .Rmd, .Qmd     
- Livre : {bookdown}, Quarto book
- Diapositives : {xaringan}, Quarto presentation    
- Site web : {blogdown}, Quarto blog et Quarto website  

> Accessibles depuis File -> New File ou File -> New Project... dans R Studio.   

## Une intégration avancée dans RStudio

- Documents avec YAML prédéfinis
- Mode d'édition visuel
- Bouton pour compiler le document via Pandoc 
- Prévisualisation dans l'onglet "Viewer"   

## Compatible avec différents languages de programmation

R, Python, SQL, bash... selon le "language engine" (knitr, jupyter). 

::: notes
Le language engine gère l'interprétation des blocs de code et prépare le document pour Pandoc.     
Pandoc convertit le doc préparé (texte en markdown + code ou résultat de code à afficher).    
:::

# Les différences

## Quarto est indépendant de R

::: columns
::: {.column width="40%"}
### Rmarkdown 
- Package R     

:::

::: {.column width="60%"}
### Quarto 
- Logiciel standalone 
- Compatible avec : VS Code, Jupyter et les éditeurs de texte
- Inclu dans R Studio version 2022.07   

:::
:::

## Outil unique versus ensemble d'outils

::: columns
::: {.column width="40%"}
### Rmarkdown 
- De multiples packages R à installer : {bookdown}, {blogdown}, {xaringan}
- RemarkJS et RevealJS
:::

::: {.column width="60%"}
### Quarto 
- Une seule installation
- RevealJS uniquement, pas d'équivalent de {flexdashboard}

:::
:::


## "Language engine" 

::: columns
::: {.column width="40%"}
### Rmarkdown 
- Un unique "language engine" : {knitr}
:::

::: {.column width="60%"}
### Quarto 
- Plusieurs "languages engines" : {knitr}, jupyter

:::
:::

![](images/différence_render_small.png) 
        

::: notes
jupyter : projet et logiciel open-source, gratuit.   
:::

## Écriture des options simplifiée

::: columns
::: {.column width="40%"}
### Rmarkdown
- Un chunk d'options générales    
- Des options de chunk en ligne, séparées par des virgules
:::

::: {.column width="60%"}
### Quarto 
- Pas de chunk d'options générales, tout est dans le YAML
- Des options de chunk les unes en dessous des autres précédées de #|
  
:::
:::

## Écriture des options simplifiée
![](images/différence_chunk_principal.png) 

## Écriture des options simplifiée
![](images/quarto_chunk_options.png){fig-align="center"}


# Pour aller plus loin

## Documentation

> https://rmarkdown.rstudio.com/lesson-1.html       
      
> https://quarto.org/docs/get-started/    
       
       
## Articles de blog
> https://yihui.org/en/2022/04/quarto-r-markdown/  

> https://occasionaldivergences.com/posts/quarto-questions/    
   
## Listes d'exemples et de ressources
> https://awesome-blogdown.com/    
       
> https://github.com/mcanouil/awesome-quarto      





